{"version":3,"sources":["TodoInput.js","TodoItem.js","leanCloud.js","UserDialog.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","react_default","a","createElement","type","value","this","props","content","className","onChange","changeTitle","bind","onKeyPress","submit","e","key","onSubmit","Component","TodoItem","checked","todo","status","toggle","title","onClick","delete","onToggle","onDelete","AV","require","init","appId","appKey","getCurrentUser","user","User","current","getUserFromAVUser","AVUser","Object","objectSpread","id","attributes","UserDialog","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selected","formData","username","password","setState","target","_this2","preventDefault","_this$state$formData","successFn","errorFn","setUsername","setPassword","signUp","then","loggedInUser","error","onSignUp","code","alert","_this3","_this$state$formData2","logIn","signIn","onSignIn","stateCopy","JSON","parse","stringify","signUpForm","changeFormData","signInForm","switch","App","newTodo","todoList","todos","filter","item","deleted","map","index","TodoItem_TodoItem","console","log","signOut","TodoInput_TodoInput","addTodo","UserDialog_UserDialog","onSignUpOrSignIn","logOut","event","push","idMaker","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23db0dd5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './TodoInput.css'\r\n\r\nexport default class TodoInput extends Component {\r\n    render() {\r\n        return <input type=\"text\" value={this.props.content}\r\n            className=\"TodoInput\"\r\n            onChange={this.changeTitle.bind(this)}\r\n            onKeyPress={this.submit.bind(this)} />\r\n    }\r\n    submit(e) {\r\n        if (e.key === 'Enter') {\r\n            this.props.onSubmit(e)\r\n        }\r\n    }\r\n    changeTitle(e) {\r\n        this.props.onChange(e)\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './TodoItem.css'\r\nexport default class TodoItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"TodoItem\">\r\n                <input type=\"checkbox\" checked={this.props.todo.status === 'completed'}\r\n                    onChange={this.toggle.bind(this)} />\r\n                <span className=\"title\">{this.props.todo.title}</span>\r\n                <button onClick={this.delete.bind(this)}>删除</button>\r\n            </div>\r\n        )\r\n    }\r\n    toggle(e) {\r\n        this.props.onToggle(e, this.props.todo)\r\n    }\r\n    delete(e) {\r\n        this.props.onDelete(e, this.props.todo)\r\n    }\r\n}","var AV = require('leancloud-storage');\r\nvar APP_ID = 'Cq846eABT06Jse8YwqavT0Aj-gzGzoHsz';\r\nvar APP_KEY = 'P7GhyCurG4aX3b3Q5iaISRAg';\r\n\r\nAV.init({\r\n    appId: APP_ID,\r\n    appKey: APP_KEY\r\n});\r\n\r\nexport default AV\r\n\r\nexport function signUp(username, password, successFn, errorFn) {\r\n    // 新建 AVUser 对象实例\r\n    var user = new AV.User();\r\n    // 设置用户名\r\n    user.setUsername(username);\r\n    // 设置密码\r\n    user.setPassword(password);\r\n\r\n    user.signUp().then(function (loggedInUser) {\r\n        let user = getUserFromAVUser(loggedInUser)\r\n        successFn.call(null, user)\r\n    }, function (error) {\r\n        errorFn.call(null, error)\r\n    });\r\n\r\n\r\n    return undefined\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    let user = AV.User.current()\r\n    if (user) {\r\n        return getUserFromAVUser(user)\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport function signOut() {\r\n    AV.User.logOut()\r\n    return undefined\r\n}\r\n\r\nexport function signIn(username, password, successFn, errorFn) {\r\n    AV.User.logIn(username, password).then(function (loggedInUser) {\r\n        let user = getUserFromAVUser(loggedInUser)\r\n        successFn.call(null, user)\r\n    }, function (error) {\r\n        errorFn.call(null, error)\r\n    });\r\n}\r\n\r\nfunction getUserFromAVUser(AVUser) {\r\n    return {\r\n        id: AVUser.id,\r\n        ...AVUser.attributes\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './UserDialog.css'\r\nimport { signUp, signIn } from './leanCloud'\r\nexport default class UserDialog extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selected: 'signUp',\r\n            formData: {\r\n                username: '',\r\n                password: '',\r\n            }\r\n        }\r\n    }\r\n    switch(e) {\r\n        this.setState({\r\n            selected: e.target.value\r\n        })\r\n    }\r\n    signUp(e) {\r\n        e.preventDefault()\r\n        let { username, password } = this.state.formData\r\n        let success = (user) => {\r\n            // console.log(user)\r\n            this.props.onSignUp.call(null, user)\r\n        }\r\n        let error = (error) => {\r\n            // alert(error)\r\n            switch (error.code) {\r\n                case 202:\r\n                    alert('用户名已被占用')\r\n                    break\r\n                default:\r\n                    alert(error)\r\n                    break\r\n            }\r\n        }\r\n        signUp(username, password, success, error)\r\n    }\r\n\r\n    signIn(e) {\r\n        e.preventDefault()\r\n        let { username, password } = this.state.formData\r\n        let success = (user) => {\r\n            // console.log('-----user----')\r\n            // console.log(user)\r\n            this.props.onSignIn.call(null, user)\r\n        }\r\n        let error = (error) => {\r\n            // alert(error)\r\n            switch (error.code) {\r\n                case 210:\r\n                    alert('用户名与密码不匹配')\r\n                    break\r\n                default:\r\n                    alert(error)\r\n                    break\r\n            }\r\n        }\r\n        signIn(username, password, success, error)\r\n    }\r\n\r\n    changeFormData(key, e) {\r\n        let stateCopy = JSON.parse(JSON.stringify(this.state))  // 用 JSON 深拷贝\r\n        stateCopy.formData[key] = e.target.value\r\n        this.setState(stateCopy)\r\n    }\r\n\r\n    render() {\r\n        let signUpForm = (\r\n            <form className=\"signUp\" onSubmit={this.signUp.bind(this)}> {/* 注册*/}\r\n                <div className=\"row\">\r\n                    <label>用户名</label>\r\n                    <input type=\"text\" value={this.state.formData.username}\r\n                        onChange={this.changeFormData.bind(this, 'username')} />\r\n                    {/* bind 不仅可以绑定 this，还可以绑定第一个参数 */}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>密码</label>\r\n                    <input type=\"password\" value={this.state.formData.password}\r\n                        onChange={this.changeFormData.bind(this, 'password')} />\r\n                </div>\r\n                <div className=\"row actions\">\r\n                    <button type=\"submit\">注册</button>\r\n                </div>\r\n            </form>\r\n        )\r\n        let signInForm = (\r\n            <form className=\"signIn\" onSubmit={this.signIn.bind(this)}> {/*登录*/}\r\n                <div className=\"row\">\r\n                    <label>用户名</label>\r\n                    <input type=\"text\" value={this.state.formData.username}\r\n                        onChange={this.changeFormData.bind(this, 'username')} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <label>密码</label>\r\n                    <input type=\"password\" value={this.state.formData.password}\r\n                        onChange={this.changeFormData.bind(this, 'password')} />\r\n                </div>\r\n                <div className=\"row actions\">\r\n                    <button type=\"submit\">登录</button>\r\n                </div>\r\n            </form>\r\n        )\r\n        return (\r\n            <div className=\"UserDialog-Wrapper\">\r\n                <div className=\"UserDialog\">\r\n                    <nav onChange={this.switch.bind(this)}>\r\n                        <label>\r\n                            <input type=\"radio\" value=\"signUp\"\r\n                                checked={this.state.selected === 'signUp'}\r\n                                onChange={this.switch.bind(this)} />\r\n                            注册\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" value=\"signIn\"\r\n                                checked={this.state.selected === 'signIn'}\r\n                                onChange={this.switch.bind(this)} />\r\n                            登录\r\n                        </label>\r\n                    </nav>\r\n                    <div className=\"panes\">\r\n                        {this.state.selected === 'signUp' ? signUpForm : null}\r\n                        {this.state.selected === 'signIn' ? signInForm : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\n\nimport './App.css';\nimport TodoInput from './TodoInput'\nimport TodoItem from './TodoItem'\nimport UserDialog from './UserDialog'\nimport { getCurrentUser, signOut } from './leanCloud'\n\nimport 'normalize.css'\nimport './reset.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: getCurrentUser() || {},\n      newTodo: '',\n      todoList: []\n    }\n  }\n  render() {\n    let todos = this.state.todoList\n      .filter((item) => !item.deleted)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <TodoItem todo={item} onToggle={this.toggle.bind(this)}\n              onDelete={this.delete.bind(this)} />\n          </li>\n        )\n      })\n    console.log('todos')\n    console.log(todos)\n    return (\n      <div className=\"App\">\n        <h1>{this.state.user.username || '我'}的待办\n          {this.state.user.id ? <button onClick={this.signOut.bind(this)}>登出</button> : null}\n        </h1>\n\n        <div className=\"inputWrapper\">\n          <TodoInput\n            content={this.state.newTodo}\n            onSubmit={this.addTodo.bind(this)}\n            onChange={this.changeTitle.bind(this)} />\n        </div>\n        <ol className=\"todoList\">\n          {todos}\n        </ol>\n        {this.state.user.id ?\n          null :\n          <UserDialog\n            onSignUp={this.onSignUpOrSignIn.bind(this)}\n            onSignIn={this.onSignUpOrSignIn.bind(this)} />}\n      </div>\n    );\n  }\n  signOut() {\n    signOut()\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = {}\n    this.setState(stateCopy)\n  }\n\n  onSignUpOrSignIn(user) {\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = user\n    this.setState(stateCopy)\n  }\n  componentDidUpdate() {\n\n  }\n  addTodo(event) {\n    this.state.todoList.push({\n      id: idMaker(),\n      title: event.target.value,\n      status: null,\n      deleted: false\n    })\n    this.setState({\n      newTodo: '',\n      todoList: this.state.todoList\n    })\n\n  }\n  toggle(e, todo) {\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    this.setState(this.state)\n\n  }\n  changeTitle(event) {\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n\n  }\n  delete(event, todo) {\n    todo.deleted = true\n    this.setState(this.state)\n\n  }\n}\n\nexport default App;\n\nlet id = 0;\nfunction idMaker() {\n  id += 1\n  return id\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}